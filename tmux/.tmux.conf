# 基本設定

# True Color対応 (より正確な色表現)
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc"
set -ga terminal-overrides ",xterm-256color:Tc"

# エスケープシーケンス遅延を短縮 (vim/nvimでのESC反応を改善)
set -sg escape-time 10

# ヒストリ上限を増加
set -g history-limit 10000

# フォーカスイベントを有効化 (エディタとの連携改善)
set -g focus-events on

# ウィンドウ・ペイン番号を1始まりに
set -g base-index 1
setw -g pane-base-index 1
set-option -g renumber-windows on

# キーバインド設定

# プレフィックスキーをC-jに変更
set -g prefix C-j
unbind C-b

# プレフィックス二回押しで直前のウィンドウに移動
bind C-j last-window

# 設定リロード
bind r source-file ~/.tmux.conf \; display-message "Config reloaded!"

# 分割系 (より直感的なキー)
unbind %
unbind '"'
bind | split-window -h -c "#{pane_current_path}"  # 縦分割は | (パイプ)
bind - split-window -v -c "#{pane_current_path}"  # 横分割は -
bind ^ split-window -h -c "#{pane_current_path}"  # 元の設定も残す

# ペイン移動 (vim風)
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# ペインリサイズ (vim風) - より細かい調整
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# ペインリサイズ (大きな調整用)
bind -r M-h resize-pane -L 10
bind -r M-j resize-pane -D 10
bind -r M-k resize-pane -U 10
bind -r M-l resize-pane -R 10

# ウィンドウ移動
bind p previous-window
bind n next-window
bind -n C-S-Left swap-window -t -1 \; previous-window
bind -n C-S-Right swap-window -t +1 \; next-window

# 新しいウィンドウ作成時に現在のパスを継承
bind c new-window -c "#{pane_current_path}"

# ペイン同期の切り替え (全ペインに同時入力)
bind S set-window-option synchronize-panes \; display-message "Synchronize-panes: #{?pane_synchronized,ON,OFF}"

# マウス設定

set-option -g mouse on

# マウスホイールの改善された設定
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# nvim使用時の特別なマウスホイール処理
bind -n WheelUpPane if-shell -F -t = "#{||:#{pane_in_mode},#{mouse_any_flag}}" "send-keys -M" "if -Ft= '#{==:#{pane_current_command},nvim}' 'send-keys -M' 'copy-mode -e; send-keys -M'"

# コピーモード設定 (vi風)

setw -g mode-keys vi

# コピーモード開始
unbind Space
bind v copy-mode  # prefix + v でコピーモード開始
bind C-u copy-mode -u  # 半画面上にスクロールしてコピーモード開始

# vi風選択・コピー
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi Y send-keys -X copy-line

# インクリメンタル検索
bind-key -T copy-mode-vi / command-prompt -i -p "search down" "send -X search-forward-incremental \"%%%\""
bind-key -T copy-mode-vi ? command-prompt -i -p "search up" "send -X search-backward-incremental \"%%%\""

# ペースト
bind ] paste-buffer
bind C-p choose-buffer  # 複数バッファから選択

# クリップボード連携

# macOS用
if-shell "uname | grep -q Darwin" {
    set -s copy-command 'pbcopy'
    bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
    bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
}

# Linux用 (xclip使用)
if-shell "uname | grep -q Linux" {
    bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
    bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
}

# ステータスバー設定

set -g status-interval 5
set -g status-position bottom
set -g status-justify centre

# ステータスバーの色
set -g status-style fg="colour255",bg="colour238"

# 左パネル
set -g status-left-length 50
set -g status-left-style fg="colour255",bg="colour201"
set -g status-left " #S:#I.#P "

# ウィンドウリスト
set-window-option -g window-status-format "  #I:#W#{?window_flags,#{window_flags}, }  "
set-window-option -g window-status-current-format " #[fg=colour255,bg=colour27,bold] #I:#W#{?window_flags,#{window_flags}, } #[default]"

# アクティビティ表示
set-window-option -g window-status-activity-style fg="colour255",bg="colour88"

# 右パネル - より詳細な情報
set -g status-right-length 80
set -g status-right-style fg="black",bg="cyan"
set -g status-right " #{?client_prefix,⌨ ,} %Y/%m/%d(%a) %H:%M "

# メッセージ表示スタイル
set -g message-style fg="colour255",bg="colour88"
set -g message-command-style fg="colour255",bg="colour88"

# ペイン設定

# ペイン枠の色
set -g pane-border-style fg="colour250",bg="default"
set -g pane-active-border-style fg="colour39",bg="default"

# ペイン番号表示時間を延長
set -g display-panes-time 2000

# ウィンドウ設定

# アクティビティ監視
setw -g monitor-activity on
set -g visual-activity off  # ステータスバーでのみ通知

# ウィンドウの自動リネーム
setw -g automatic-rename on
setw -g automatic-rename-format '#{b:pane_current_path}'

# その他の便利な設定

# ウィンドウを閉じた時に番号を詰める
set -g renumber-windows on

# 複数セッション間でのバッファ共有を改善
set -g set-clipboard on

# セッション/ウィンドウ管理の改善
bind-key w choose-window
bind-key s choose-session
bind-key X confirm-before -p "kill-session #S? (y/n)" kill-session

# ペインのズーム切り替え
bind-key z resize-pane -Z

# デタッチ時の改善
bind-key d detach-client
bind-key D choose-client

# 履歴の検索強化
bind-key / copy-mode \; send-key ?

# ステータスバーの表示/非表示切り替え
bind-key b set-option status

# 非アクティブペインを暗くする
# set -g window-style 'fg=colour247,bg=colour236'
# set -g window-active-style 'fg=colour250,bg=black'

# プラグイン (オプション)

# TPM (Tmux Plugin Manager) を使用する場合は以下を有効化
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'
#
# # プラグインの初期化 (最後に記述)
# run '~/.tmux/plugins/tpm/tpm'
